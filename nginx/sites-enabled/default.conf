# Define connection details for connecting to django running in
# a docker container.
upstream uwsgi {
    server uwsgi:8080;

}

server {
    # OTF gzip compression
    gzip on;
    gzip_min_length 860;
    gzip_comp_level 5;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain application/xml application/x-javascript text/xml text/css application/json;
    gzip_disable “MSIE [1-6].(?!.*SV1)”;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # the port your site will be served on
    listen      8080;
    # the domain name it will serve for

    # SSL configuration
    # listen              443 ssl;
    # server_name         live.gcemgr.com;
    # ssl_certificate     /etc/nginx/live.gcemgr.com.crt;
    # ssl_certificate_key /etc/nginx/live.gcemgr.com.key;
    # server_name               live.gcemgr.com;
    # ssl                       on;
    # charset                   utf-8;
    # add_header                Strict-Transport-Security "max-age=31536000" always;

    # ssl_session_cache         shared:SSL:20m;
    # ssl_session_timeout       10m;

    # ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    # ssl_prefer_server_ciphers on;
    # ssl_ciphers               "ECDH+AESGCM:ECDH+AES256:ECDH+AES128:!ADH:!AECDH:!MD5;";

    # ssl_stapling              on;
    # ssl_stapling_verify       on;
    resolver                  8.8.8.8 8.8.4.4;

    # max upload size, adjust to taste
    client_max_body_size 15M;

    # Django media
    location /react-app  {
        # your Django project's media files - amend as required
        # alias /home/web/media;
        # expires 21d; # cache for 71 days
        proxy_pass http://localhost:3000/;
    }
    location /angular-app {
        # your Django project's static files - amend as required
        # alias /home/web/static;
        # expires 21d; # cache for 21 days
        # add_header Access-Control-Allow-Origin *;
        proxy_pass http://localhost:4200/;
    }
    location /flask-app {
        # Changed from http_host to host because of error messages when
        # bots hit urls like this:
        #  'REQUEST_URI': '/phpmyadmin/scripts/setup.php',
        # See https://snakeycode.wordpress.com/2016/11/21/django-nginx-invalid-http_host-header/
        # for more details.
        #proxy_set_header   Host $http_host;
        # proxy_set_header   Host $host;
        # autoindex on;
        # # your Django project's static files - amend as required
        # alias /home/web/archive;
        # expires 21d; # cache for 6h
        proxy_pass http://localhost:5000/;
    }
    # Finally, send all non-media requests to the Django server.
    location / {
        proxy_pass http://localhost:5000/;
        # uwsgi_pass  uwsgi;

        # uwsgi_param  QUERY_STRING       $query_string;
        # uwsgi_param  REQUEST_METHOD     $request_method;
        # uwsgi_param  CONTENT_TYPE       $content_type;
        # uwsgi_param  CONTENT_LENGTH     $content_length;

        # uwsgi_param  REQUEST_URI        $request_uri;
        # uwsgi_param  PATH_INFO          $document_uri;
        # uwsgi_param  DOCUMENT_ROOT      $document_root;
        # uwsgi_param  SERVER_PROTOCOL    $server_protocol;
        # uwsgi_param  HTTPS              $https if_not_empty;

        # uwsgi_param  REMOTE_ADDR        $remote_addr;
        # uwsgi_param  REMOTE_PORT        $remote_port;
        # uwsgi_param  SERVER_PORT        $server_port;
        # uwsgi_param  SERVER_NAME        $server_name;
    }
}
